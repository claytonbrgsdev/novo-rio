"""update_character_model_relationships

Revision ID: 999999
Revises: ea507d6eba83
Create Date: 2025-05-21 02:20:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '999999'
down_revision = 'ea507d6eba83'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    # Verificar e criar tabelas necessárias antes de adicionar chaves estrangeiras
    if 'heads' not in inspector.get_table_names():
        op.create_table('heads',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('description', sa.String(length=255), nullable=True),
            sa.Column('image_url', sa.String(length=255), nullable=True),
            sa.PrimaryKeyConstraint('id')
        )
    
    if 'bodies' not in inspector.get_table_names():
        op.create_table('bodies',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('description', sa.String(length=255), nullable=True),
            sa.Column('image_url', sa.String(length=255), nullable=True),
            sa.PrimaryKeyConstraint('id')
        )
    
    if 'characters' not in inspector.get_table_names():
        op.create_table('characters',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('player_id', sa.Integer(), nullable=False),
            sa.Column('head_id', sa.Integer(), nullable=True),
            sa.Column('body_id', sa.Integer(), nullable=True),
            sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
            sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
            sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_characters_player_id'), 'characters', ['player_id'], unique=False)
    
    # Apenas crie chaves estrangeiras se todas as tabelas necessárias existirem
    if all(table in inspector.get_table_names() for table in ['characters', 'heads', 'bodies']):
        try:
            op.create_foreign_key(
                'fk_character_head', 
                'characters', 
                'heads', 
                ['head_id'], 
                ['id']
            )
        except Exception as e:
            print(f"Erro ao criar chave estrangeira fk_character_head: {str(e)}")
            
        try:
            op.create_foreign_key(
                'fk_character_body', 
                'characters', 
                'bodies', 
                ['body_id'], 
                ['id']
            )
        except Exception as e:
            print(f"Erro ao criar chave estrangeira fk_character_body: {str(e)}")
    else:
        print("Nem todas as tabelas necessárias existem para criar chaves estrangeiras")
    
    op.create_index(
        'ix_characters_head_id', 
        'characters', 
        ['head_id'], 
        unique=False
    )
    op.create_index(
        'ix_characters_body_id', 
        'characters', 
        ['body_id'], 
        unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_characters_body_id', table_name='characters')
    op.drop_index('ix_characters_head_id', table_name='characters')
    op.drop_constraint('fk_character_body', 'characters', type_='foreignkey')
    op.drop_constraint('fk_character_head', 'characters', type_='foreignkey')
    # ### end Alembic commands ###
