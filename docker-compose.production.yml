version: '3.8'

services:
  app:
    build:
      context: ./backend
    restart: always
    environment:
      - DATABASE_URL=postgresql://novorio:prod_secure_password_change_me@db:5432/novorio_production
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
      - SECRET_KEY=prod_secure_key_change_me
      - CORS_ORIGINS=https://novorioapp.com,http://localhost:8084
      - TZ=America/Sao_Paulo
      - SCHEDULER_START_AFTER_MIGRATIONS=true
      - ADMIN_EMAIL=claytonborgesdev@gmail.com
      - ADMIN_PASSWORD=123Senha@
    ports:
      - "8084:8084"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8084"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - app_data:/data
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=novorio
      - POSTGRES_PASSWORD=prod_secure_password_change_me
      - POSTGRES_DB=novorio_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U novorio -d novorio_production"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  app_data:
  postgres_data:
